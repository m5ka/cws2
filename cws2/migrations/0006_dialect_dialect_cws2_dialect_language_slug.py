# Generated by Django 4.2.3 on 2023-10-10 13:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import cws2.models.base


class Migration(migrations.Migration):
    dependencies = [
        ("cws2", "0005_add_human_phono_system"),
    ]

    operations = [
        migrations.CreateModel(
            name="Dialect",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Does everyone have an implicit read permission for this resource?",
                        verbose_name="Public status",
                    ),
                ),
                (
                    "is_shared",
                    models.BooleanField(
                        default=False,
                        help_text="Are there specific user and group permissions set for this resource?",
                        verbose_name="Sharing status",
                    ),
                ),
                ("uuid", models.CharField(db_index=True, max_length=22, unique=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="This is the name of this dialect, in English.",
                        max_length=64,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="This is like a username for this dialect, appearing in the dialect page's URL. You may not have more than one dialect for this language with the same identifier.",
                        max_length=64,
                        unique=True,
                        verbose_name="Identifier",
                    ),
                ),
                (
                    "endonym",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="This is the name of this dialect, in your language. Don't worry if you don't know this yet - you can leave this field blank.",
                        max_length=128,
                        verbose_name="Endonym",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="An abbreviation or ISO-style code for this dialect, if you have one. This is purely cosmetic.",
                        max_length=6,
                        verbose_name="Dialect code",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="This is a brief summary of this dialect of your language that will appear on its page. You can write more specific articles about the dialect later on.",
                        verbose_name="Summary",
                    ),
                ),
                (
                    "archived_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="archived_by_user_id",
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="archived_%(class)ss+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        db_column="created_by_user_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        help_text="The language to which this dialect belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cws2.language",
                        verbose_name="Language",
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        db_column="owned_by_user_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="updated_by_user_id",
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)ss+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(cws2.models.base.AutoSlugMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="dialect",
            constraint=models.UniqueConstraint(
                fields=("language", "slug"), name="cws2_dialect_language_slug"
            ),
        ),
    ]
